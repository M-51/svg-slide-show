{"version":3,"file":"script.js","sources":["../src/js/settings.js","../src/js/engine/animate.js","../src/js/control/buttons.js","../src/js/control/player.js","../src/js/utils.js","../src/js/engine/calculations/transform.js","../src/js/engine/calculations/attribute.js","../src/js/engine/calculate.js","../src/js/engine/dispatch.js","../src/js/classes/main.js","../src/js/classes/slide.js","../src/js/index.js"],"sourcesContent":["const settings = {\r\n    svg: document.getElementsByTagName('svg')[0],\r\n    speed: 0.025,\r\n    easing: t => t * t * (3 - (2 * t)),\r\n};\r\n\r\nexport default settings;\r\n","import settings from '../settings';\r\n\r\nfunction animateObject(arr, ease) {\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n        arr[i][0](ease);\r\n    }\r\n}\r\nfunction updateObject(arr) {\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n        arr[i][1]();\r\n    }\r\n}\r\n\r\n\r\nfunction animate(s, d, arr) {\r\n    return new Promise((resolve) => {\r\n        let t = 0;\r\n        let ease;\r\n        const speed = settings.speed * s > 0 ? settings.speed * s : 0.025;\r\n\r\n        function step() {\r\n            if (t < 1) {\r\n                t += speed;\r\n                ease = settings.easing(t);\r\n                for (let i = 0; i < arr.length; i += 1) {\r\n                    animateObject(arr[i], ease);\r\n                }\r\n                window.requestAnimationFrame(step);\r\n            } else {\r\n                for (let i = 0; i < arr.length; i += 1) {\r\n                    updateObject(arr[i]);\r\n                }\r\n                resolve();\r\n            }\r\n        }\r\n        window.setTimeout(step, d);\r\n    });\r\n}\r\n\r\nexport default animate;\r\n","import settings from '../settings';\r\n\r\n/*--------------------------------------------------------------------------\r\n****************************************************************************\r\n\r\n                        Create elements of interface\r\n\r\n***************************************************************************\r\n--------------------------------------------------------------------------*/\r\n\r\n// declare variables\r\n\r\nconst icons = {\r\n    group: null,\r\n    polygon1: null,\r\n    polygon2: null,\r\n    arc1: null,\r\n    arc2: null,\r\n    rect: null,\r\n};\r\n\r\n// create icons\r\n\r\nconst xmlns = 'http://www.w3.org/2000/svg';\r\nicons.group = document.createElementNS(xmlns, 'g');\r\n\r\nicons.arc1 = document.createElementNS(xmlns, 'path');\r\nicons.arc1.setAttributeNS(null, 'd', 'M10,20 A10,10 0 0,1 20,10');\r\nicons.group.appendChild(icons.arc1);\r\n\r\nicons.arc2 = document.createElementNS(xmlns, 'path');\r\nicons.arc2.setAttributeNS(null, 'd', 'M30,20 A10,10 0 0,1 20,30');\r\nicons.group.appendChild(icons.arc2);\r\n\r\nicons.polygon1 = document.createElementNS(xmlns, 'polygon');\r\nicons.polygon1.setAttributeNS(null, 'points', '10,10 10,30 20,25 20,15');\r\nicons.group.appendChild(icons.polygon1);\r\n\r\nicons.polygon2 = document.createElementNS(xmlns, 'polygon');\r\nicons.polygon2.setAttributeNS(null, 'points', '20,25 20,15 30,20 30,20');\r\nicons.group.appendChild(icons.polygon2);\r\n\r\nicons.rect = document.createElementNS(xmlns, 'rect');\r\nicons.rect.setAttributeNS(null, 'x', 0);\r\nicons.rect.setAttributeNS(null, 'y', 0);\r\nicons.rect.setAttributeNS(null, 'width', 40);\r\nicons.rect.setAttributeNS(null, 'height', 40);\r\nicons.group.appendChild(icons.rect);\r\n\r\n// add style to interface\r\n\r\nconst css = document.createElementNS('http://www.w3.org/2000/svg', 'style');\r\ncss.textContent = '#control > rect {opacity: 0; cursor: pointer;} #control > path {stroke:#000; fill:none; stroke-width: 2px; stroke-dasharray: 16px; stroke-dashoffset: 16px}';\r\n\r\n\r\nlet defs = settings.svg.getElementsByTagName('defs')[0];\r\nif (!defs) {\r\n    defs = document.createElement('defs');\r\n    settings.svg.insertBefore(defs, settings.svg.firstChild);\r\n}\r\ndefs.appendChild(css);\r\n\r\n// set interface to correct position\r\nconst viewBox = settings.svg.viewBox.baseVal;\r\nconst matrix = settings.svg.createSVGMatrix();\r\nmatrix.e = viewBox.x + 10;\r\nmatrix.f = viewBox.y + (viewBox.height - 50);\r\nicons.group.id = 'control';\r\nicons.group.transform.baseVal.initialize(settings.svg.createSVGTransformFromMatrix(matrix));\r\n\r\n\r\n// add interface to DOM\r\n\r\nsettings.svg.appendChild(icons.group);\r\n\r\n\r\n// add event listeners to elements of interface, and set event propagation\r\n\r\nconst event = document.createEvent('Event');\r\nevent.initEvent('button-click', true, true);\r\nicons.rect.addEventListener('click', () => { settings.svg.dispatchEvent(event); });\r\n\r\n/*--------------------------------------------------------------------------\r\n****************************************************************************\r\n\r\n                        interface animations\r\n\r\n***************************************************************************\r\n--------------------------------------------------------------------------*/\r\n\r\n// animation - play -> pause\r\n\r\nfunction animatePlayToPause() {\r\n    let steps = 1;\r\n\r\n    function animate() {\r\n        if (steps <= 10) {\r\n            icons.polygon1.setAttribute('points', `\r\n            10,10 \r\n            10,30 \r\n            ${20 - (steps / 5) > 18 ? 20 - (steps / 5) : 18},${25 + (steps / 2) < 30 ? 25 + (steps / 2) : 30} \r\n            ${20 - (steps / 5) > 18 ? 20 - (steps / 5) : 18},${15 - (steps / 2) > 10 ? 15 - (steps / 2) : 10}\r\n            `);\r\n            icons.polygon2.setAttribute('points', `\r\n            ${20 + (steps / 5) < 22 ? 20 + (steps / 5) : 22},${15 - (steps / 2) > 10 ? 15 - (steps / 2) : 10} \r\n            ${20 + (steps / 5) < 22 ? 20 + (steps / 5) : 22}, ${25 + (steps / 2) < 30 ? 25 + (steps / 2) : 30} \r\n            30,${20 + steps < 30 ? 20 + steps : 30} \r\n            30,${20 - steps > 10 ? 20 - steps : 10}\r\n            `);\r\n            steps += 1;\r\n            window.requestAnimationFrame(animate);\r\n        }\r\n    }\r\n    animate();\r\n}\r\n\r\n// animation - pause -> play\r\n\r\nfunction animatePauseToPlay() {\r\n    let steps = 1;\r\n\r\n    function animate() {\r\n        if (steps <= 10) {\r\n            icons.polygon1.setAttribute('points', `\r\n                10,10 \r\n                10,30 \r\n                ${18 + (steps / 5) < 20 ? 18 + (steps / 5) : 20},${30 - (steps / 2) > 25 ? 30 - (steps / 2) : 25} \r\n                ${18 + (steps / 5) < 20 ? 18 + (steps / 5) : 20},${10 + (steps / 2) < 15 ? 10 + (steps / 2) : 15}\r\n            `);\r\n            icons.polygon2.setAttribute('points', `\r\n                ${22 - (steps / 5) > 20 ? 22 - (steps / 5) : 20},${10 + (steps / 2) < 15 ? 10 + (steps / 2) : 15} \r\n                ${22 - (steps / 5) > 20 ? 22 - (steps / 5) : 20},${30 - (steps / 2) > 25 ? 30 - (steps / 2) : 25} \r\n                30,${30 - (steps > 20) ? 30 - steps : 20} \r\n                30,${10 + (steps < 20) ? 10 + steps : 20}\r\n            `);\r\n            steps += 1;\r\n            window.requestAnimationFrame(animate);\r\n        }\r\n    }\r\n    animate();\r\n}\r\n\r\n// animation - pause -> reload\r\n\r\nfunction animatePauseToReload() {\r\n    let steps = 1;\r\n    let offset = 16;\r\n\r\n    function animateArc() {\r\n        if (offset > 0) {\r\n            offset -= 1;\r\n            icons.arc1.setAttribute('style', `stroke-dashoffset:${offset}px`);\r\n            icons.arc2.setAttribute('style', `stroke-dashoffset:${offset}px`);\r\n            window.requestAnimationFrame(animateArc);\r\n        } else {\r\n            icons.arc1.setAttribute('style', 'stroke-dashoffset:0');\r\n            icons.arc2.setAttribute('style', 'stroke-dashoffset:0');\r\n        }\r\n    }\r\n\r\n    function animate() {\r\n        if (steps <= 10) {\r\n            icons.polygon1.setAttribute('points', `\r\n                ${10 - (steps * 0.4) > 6 ? 10 - (steps * 0.4) : 6},${10 + steps < 20 ? 10 + steps : 20} \r\n                10,${30 - (steps * 0.4) > 26 ? 30 - (steps * 0.4) : 26} \r\n                ${18 - (steps * 0.8) > 10 ? 18 - (steps * 0.8) : 10},${30 - (steps * 0.4) > 26 ? 30 - (steps * 0.4) : 26} \r\n                ${18 - (steps * 0.4) > 14 ? 18 - (steps * 0.4) : 14},${10 + steps < 20 ? 10 + steps : 20}\r\n            `);\r\n            icons.polygon2.setAttribute('points', `\r\n                ${22 + (steps * 0.8) < 30 ? 22 + (steps * 0.8) : 30},${10 + (steps * 0.4) < 14 ? 10 + (steps * 0.4) : 14} \r\n                ${22 + (steps * 0.4) < 26 ? 22 + (steps * 0.4) : 26},${30 - steps > 20 ? 30 - steps : 20} \r\n                 ${30 + (steps * 0.4) < 34 ? 30 + (steps * 0.4) : 34},${30 - steps > 20 ? 30 - steps : 20} \r\n                30,${10 + (steps * 0.4) < 14 ? 10 + (steps * 0.4) : 14}\r\n            `);\r\n            steps += 1;\r\n            window.requestAnimationFrame(animate);\r\n        } else {\r\n            animateArc();\r\n        }\r\n    }\r\n    animate();\r\n}\r\n\r\n// animation - reload -> play\r\n\r\nfunction animateReloadToPlay() {\r\n    let steps = 1;\r\n    let offset = 0;\r\n\r\n    function animate() {\r\n        if (steps <= 10) {\r\n            icons.polygon1.setAttribute('points', `\r\n                ${6 + (steps * 0.4) < 10 ? 6 + (steps * 0.4) : 10},${20 - steps > 10 ? 20 - steps : 10} \r\n                10,${26 + (steps * 0.4) < 30 ? 26 + (steps * 0.4) : 30} \r\n                ${10 + steps < 20 ? 10 + steps : 20},${26 - (steps * 0.1) > 25 ? 26 - (steps * 0.1) : 25} \r\n                ${14 + (steps * 0.6) < 20 ? 14 + (steps * 0.6) : 20},${20 - (steps * 0.5) > 15 ? 20 - (steps * 0.5) : 15}\r\n            `);\r\n            icons.polygon2.setAttribute('points', `\r\n                ${30 - steps > 20 ? 30 - steps : 20},${14 + (steps * 0.1) < 15 ? 14 + (steps * 0.1) : 15} \r\n                ${26 - (steps * 0.6) > 20 ? 26 - (steps * 0.6) : 20},${20 + (steps * 0.5) < 25 ? 20 + (steps * 0.5) : 25} \r\n                ${34 - (steps * 0.4) > 30 ? 34 - (steps * 0.4) : 30},20 \r\n                30,${14 + (steps * 0.6) < 20 ? 14 + (steps * 0.6) : 20}\r\n            `);\r\n            steps += 1;\r\n            window.requestAnimationFrame(animate);\r\n        }\r\n    }\r\n\r\n    function animateArc() {\r\n        if (offset < 16) {\r\n            offset += 1;\r\n            icons.arc1.setAttribute('style', `stroke-dashoffset:${offset}px`);\r\n            icons.arc2.setAttribute('style', `stroke-dashoffset:${offset}`);\r\n            window.requestAnimationFrame(animateArc);\r\n        } else {\r\n            icons.arc1.removeAttribute('style');\r\n            icons.arc2.removeAttribute('style');\r\n            animate();\r\n        }\r\n    }\r\n    animateArc();\r\n}\r\n\r\nexport {\r\n    animatePlayToPause as playToPause,\r\n    animatePauseToPlay as pauseToPlay,\r\n    animatePauseToReload as pauseToReload,\r\n    animateReloadToPlay as reloadToPlay,\r\n};\r\n","import { playToPause, pauseToPlay, pauseToReload, reloadToPlay } from './buttons';\r\n\r\nconst slides = [];\r\nconst objectList = [];\r\nlet currentSlide = 0;\r\nlet status = 'not started';\r\n\r\nfunction start() {\r\n    currentSlide = 0;\r\n    slides[currentSlide].play();\r\n}\r\n\r\nfunction reset() {\r\n    for (let i = 0; i < objectList.length; i += 1) {\r\n        objectList[i].reset();\r\n    }\r\n}\r\n\r\nfunction resume() {\r\n    if (currentSlide + 1 >= slides.length) {\r\n        status = 'finished';\r\n        pauseToReload();\r\n    } else {\r\n        currentSlide += 1;\r\n        slides[currentSlide].play();\r\n        playToPause();\r\n    }\r\n}\r\n\r\nfunction controlPlayer() {\r\n    if (slides.length === 0) {\r\n        throw new Error('No slides to animate. Add slides using \"addSlides\" function.');\r\n    }\r\n\r\n    if (status === 'finished') {\r\n        status = 'not started';\r\n        reset();\r\n        reloadToPlay();\r\n    } else if (status === 'playing') {\r\n        status = 'paused';\r\n        pauseToPlay();\r\n    } else if (status === 'paused') {\r\n        status = 'playing';\r\n        resume();\r\n    } else if (status === 'not started') {\r\n        status = 'playing';\r\n        start();\r\n        playToPause();\r\n    }\r\n}\r\n\r\nfunction next() {\r\n    if (currentSlide + 1 >= slides.length) {\r\n        status = 'finished';\r\n        pauseToReload();\r\n    } else if (status !== 'paused') {\r\n        currentSlide += 1;\r\n        slides[currentSlide].play();\r\n    }\r\n}\r\n\r\nfunction addSlides(...slide) {\r\n    for (let i = 0; i < slide.length; i += 1) {\r\n        slides.push(slide[i]);\r\n    }\r\n}\r\nfunction addObjects(object) {\r\n    if (objectList.indexOf(object) === -1) {\r\n        objectList.push(object);\r\n    }\r\n}\r\n\r\ndocument.documentElement.addEventListener('button-click', controlPlayer, false);\r\n\r\nexport { addSlides, addObjects, next };\r\n\r\n","const utils = {\r\n    undef: item => (typeof item === 'undefined'),\r\n};\r\n\r\nexport default utils;\r\n","import utils from './../../utils';\r\n\r\nfunction calculateTransform(el) {\r\n    const targetTransform = el.transform;\r\n\r\n    if (!utils.undef(targetTransform)) {\r\n        let animateFunc;\r\n        let updateFunc;\r\n        const object = el.object;\r\n        const startingTransform = el.object.tr;\r\n\r\n        const deltaScale = targetTransform.scale - startingTransform.scale;\r\n        const deltaRotate = targetTransform.rotate - startingTransform.rotate;\r\n        const delta0 = targetTransform.translate[0] - startingTransform.translate[0];\r\n        const delta1 = targetTransform.translate[1] - startingTransform.translate[1];\r\n\r\n        /* -------- transforms without translation -------- */\r\n        if (utils.undef(targetTransform.translate)) {\r\n            if (utils.undef(targetTransform.rotate)) {\r\n                // only scaling\r\n                animateFunc = (t) => {\r\n                    object.scale(startingTransform.scale + (deltaScale * t));\r\n                };\r\n                updateFunc = () => {\r\n                    object.scale(targetTransform.scale);\r\n                    startingTransform.scale = targetTransform.scale;\r\n                };\r\n            } else if (utils.undef(targetTransform.scale)) {\r\n                // only rotation\r\n                animateFunc = (t) => {\r\n                    object.rotate(\r\n                        startingTransform.rotate + (deltaRotate * t));\r\n                };\r\n                updateFunc = () => {\r\n                    object.rotate(targetTransform.rotate);\r\n                    startingTransform.rotate = targetTransform.rotate;\r\n                };\r\n            } else {\r\n                // scaling and rotating\r\n                animateFunc = (t) => {\r\n                    object.scaleAndRotate(\r\n                        startingTransform.scale + (deltaScale * t),\r\n                        startingTransform.rotate + (deltaRotate * t));\r\n                };\r\n                updateFunc = () => {\r\n                    object.scaleAndRotate(targetTransform.scale, targetTransform.rotate);\r\n                    startingTransform.scale = targetTransform.scale;\r\n                    startingTransform.rotate = targetTransform.rotate;\r\n                };\r\n            }\r\n        /* -------- transforms with translation -------- */\r\n        } else if (utils.undef(targetTransform.scale) && utils.undef(targetTransform.rotate)) {\r\n            // only translation\r\n            animateFunc = (t) => {\r\n                object.translate(\r\n                    startingTransform.translate[0] + (delta0 * t),\r\n                    startingTransform.translate[1] + (delta1 * t));\r\n            };\r\n            updateFunc = () => {\r\n                object.translate(\r\n                    targetTransform.translate[0],\r\n                    targetTransform.translate[1]);\r\n                startingTransform.translate = targetTransform.translate;\r\n            };\r\n        } else if (utils.undef(targetTransform.rotate)) {\r\n            // scale and translation\r\n            animateFunc = (t) => {\r\n                object.scaleAndTranslate(\r\n                    startingTransform.scale + (deltaScale * t),\r\n                    startingTransform.translate[0] + (delta0 * t),\r\n                    startingTransform.translate[1] + (delta1 * t));\r\n            };\r\n            updateFunc = () => {\r\n                object.scaleAndTranslate(\r\n                    targetTransform.scale,\r\n                    targetTransform.translate[0],\r\n                    targetTransform.translate[1]);\r\n                startingTransform.scale = targetTransform.scale;\r\n                startingTransform.translate = targetTransform.translate;\r\n            };\r\n        } else if (typeof targetTransform.scale === 'undefined') {\r\n            // rotation and translation\r\n            animateFunc = (t) => {\r\n                object.rotateAndTranslate(\r\n                    startingTransform.rotate + (deltaRotate * t),\r\n                    startingTransform.translate[0] + (delta0 * t),\r\n                    startingTransform.translate[1] + (delta1 * t));\r\n            };\r\n            updateFunc = () => {\r\n                object.rotateAndTranslate(\r\n                    targetTransform.rotate,\r\n                    targetTransform.translate[0],\r\n                    targetTransform.translate[1]);\r\n                startingTransform.rotate = targetTransform.rotate;\r\n                startingTransform.translate = targetTransform.translate;\r\n            };\r\n        } else {\r\n            // scale, rotation and translation\r\n            animateFunc = (t) => {\r\n                object.scaleAndRotateAndTranslate(\r\n                    startingTransform.scale + (deltaScale * t),\r\n                    startingTransform.rotate + (deltaRotate * t),\r\n                    startingTransform.translate[0] + (delta0 * t),\r\n                    startingTransform.translate[1] + (delta1 * t));\r\n            };\r\n            updateFunc = () => {\r\n                object.scaleAndRotateAndTranslate(\r\n                    targetTransform.scale,\r\n                    targetTransform.rotate,\r\n                    targetTransform.translate[0],\r\n                    targetTransform.translate[1]);\r\n                startingTransform.scale = targetTransform.scale;\r\n                startingTransform.rotate = targetTransform.rotate;\r\n                startingTransform.translate = targetTransform.translate;\r\n            };\r\n        }\r\n\r\n        return [animateFunc, updateFunc];\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default calculateTransform;\r\n","import utils from './../../utils';\r\n\r\nfunction calculateAttributes(el) {\r\n    const attributes = el.attributes;\r\n    const table = [];\r\n\r\n    function animateFunc(t) {\r\n        for (let i = 0; i < table.length; i += 1) {\r\n            el.object.obj.setAttribute(table[i][0], table[i][1] + ((table[i][2] - table[i][1]) * t));\r\n        }\r\n    }\r\n\r\n    function updateFunc() {\r\n        for (let i = 0; i < table.length; i += 1) {\r\n            el.object.obj.setAttribute(table[i][0], table[i][2]);\r\n            el.object.variables.set(table[i][0], table[i][2]);\r\n        }\r\n    }\r\n\r\n    if (!utils.undef(attributes) && attributes.length !== 0) {\r\n        for (let i = 0; i < attributes.length; i += 1) {\r\n            const name = attributes[i].name;\r\n\r\n            const from = utils.undef(attributes[i].from) ? el.object.variables.get(name) : attributes[i].from;\r\n            if (utils.undef(from)) { throw new Error(`No \"from\" value, for ${name}`); }\r\n\r\n            const to = attributes[i].to;\r\n\r\n            table.push([name, from, to]);\r\n        }\r\n        return [animateFunc, updateFunc];\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default calculateAttributes;\r\n","import animate from './animate';\r\nimport { addObjects } from '../control/player';\r\nimport calculateTransform from './calculations/transform';\r\nimport calculateAttributes from './calculations/attribute';\r\n\r\nfunction calculate(el) {\r\n    const arr = [];\r\n    return new Promise((resolve) => {\r\n        for (let i = 0; i < el.objects.length; i += 1) {\r\n            const requestObject = el.objects[i];\r\n\r\n            const calculatedTransform = calculateTransform(requestObject);\r\n            if (calculatedTransform) { arr.push([calculatedTransform]); }\r\n\r\n            const calculatedAttributes = calculateAttributes(requestObject);\r\n            if (calculatedAttributes) { arr.push([calculatedAttributes]); }\r\n\r\n\r\n            // add objects to objects array in player.js. Needed for reseting\r\n            addObjects(el.objects[i].object);\r\n        }\r\n        animate(\r\n            el.speed ? el.speed : 1,\r\n            el.delay ? el.delay : 0,\r\n            arr)\r\n        .then(() => { resolve(); });\r\n    });\r\n}\r\n\r\nexport default calculate;\r\n","import calculate from './calculate';\r\n\r\nfunction dispatch(...threads) {\r\n    return new Promise((resolve, reject) => {\r\n        if (threads.length === 0) {\r\n            reject(Error('Add objects to \"step\" function'));\r\n        } else if (threads.length === 1) {\r\n            calculate(threads[0]).then(() => { resolve(); });\r\n        } else {\r\n            const arr = [];\r\n\r\n            for (let i = 0; i < threads.length; i += 1) {\r\n                arr.push(calculate(threads[i]));\r\n            }\r\n            Promise.all(arr).then(() => { resolve(); });\r\n        }\r\n    });\r\n}\r\nconst step = dispatch;\r\n\r\n\r\nexport default step;\r\n","import settings from '../settings'; // import settings for getting access to SVG element\r\nimport utils from '../utils'; // import utils for utils.undef\r\n\r\nclass Obj {\r\n/*\r\n-----------------------------------CONSTRUCTOR-----------------------------------\r\n---------------------------------------------------------------------------------\r\n*/\r\n    constructor(obj, transform = { translate: [0, 0], rotate: 0, scale: 1 }) {\r\n        // access to DOM object\r\n        this.obj = obj;\r\n        // create zero matrix\r\n        this.manipulationMatrix = settings.svg.createSVGMatrix();\r\n        // set starting variables, and declare this.startingVariables and this.variables\r\n        this.setStartingVariables(transform);\r\n        // set initial matrix\r\n        this.setInitialMatrix();\r\n\r\n        /* -------- shortcuts -------- */\r\n\r\n        // to matrix interface -> this.SVGTransform\r\n\r\n        // to current transform\r\n        this.tr = this.variables.get('transform');\r\n    }\r\n\r\n/*\r\n-------------------------------INITIALIZING METHODS------------------------------\r\n---------------------------------------------------------------------------------\r\n*/\r\n\r\n\r\n    setStartingVariables(transform) {\r\n        const map = new Map();\r\n        for (let i = 0; i < this.obj.attributes.length; i += 1) {\r\n            if (this.obj.attributes[i].specified && this.obj.attributes[i].name !== 'transform') {\r\n                map.set(this.obj.attributes[i].name, parseFloat(this.obj.attributes[i].value) || this.obj.attributes[i].value);\r\n            }\r\n        }\r\n        this.startingVariables = new Map(map);\r\n        this.variables = new Map(map);\r\n\r\n        // reference shit\r\n        for (let i = 0; i < 2; i += 1) {\r\n            [this.startingVariables, this.variables][i].set('transform', {\r\n                translate: utils.undef(transform.translate) ? [0, 0] : transform.translate,\r\n                scale: utils.undef(transform.scale) ? 1 : transform.scale,\r\n                rotate: utils.undef(transform.rotate) ? 0 : transform.rotate,\r\n            });\r\n        }\r\n    }\r\n\r\n    setInitialMatrix() {\r\n        const transform = this.variables.get('transform');\r\n        this.obj.transform.baseVal.initialize(settings.svg.createSVGTransformFromMatrix(this.manipulationMatrix));\r\n        this.SVGTransform = this.obj.transform.baseVal.getItem(0);\r\n        this.scaleAndRotateAndTranslate(transform.scale, transform.rotate, transform.translate[0], transform.translate[1]);\r\n    }\r\n\r\n/*\r\n----------------------------------OTHER-METHODS----------------------------------\r\n---------------------------------------------------------------------------------\r\n*/\r\n\r\n    setMatrix(matrix) { this.SVGTransform.setMatrix(matrix); }\r\n\r\n    reset() {\r\n        // reset variables\r\n        this.variables = new Map(this.startingVariables);\r\n        // reference shit\r\n        const transform = this.startingVariables.get('transform');\r\n        this.variables.set('transform', {\r\n            translate: transform.translate,\r\n            scale: transform.scale,\r\n            rotate: transform.rotate,\r\n        });\r\n        this.tr = this.variables.get('transform');\r\n\r\n        const obj = this.obj;\r\n\r\n        // remove all attributes from element DOM\r\n        for (let i = obj.attributes.length - 1; i >= 0; i -= 1) {\r\n            if (obj.attributes[i].name !== 'transform') {\r\n                obj.removeAttribute(obj.attributes[i].name);\r\n            }\r\n        }\r\n        // add all starting attributes\r\n        function add(value, key) {\r\n            if (key !== 'transform') {\r\n                obj.setAttribute(key, value);\r\n            }\r\n        }\r\n        this.variables.forEach(add);\r\n\r\n\r\n        // set starting transform\r\n        this.setInitialMatrix();\r\n    }\r\n\r\n\r\n/*\r\n---------------------------------ANIMATING-METHODS-------------------------------\r\n---------------------------------------------------------------------------------\r\n*/\r\n    translate(x, y) {\r\n        this.manipulationMatrix.e = x;\r\n        this.manipulationMatrix.f = y;\r\n\r\n        this.setMatrix(this.manipulationMatrix);\r\n    }\r\n    rotate(angle) {\r\n        const radians = (-angle * Math.PI) / 180;\r\n        const c = Math.sin(radians) * this.tr.scale;\r\n        const a = Math.cos(radians) * this.tr.scale;\r\n\r\n        this.manipulationMatrix.a = a;\r\n        this.manipulationMatrix.b = -c;\r\n        this.manipulationMatrix.c = c;\r\n        this.manipulationMatrix.d = a;\r\n\r\n        this.setMatrix(this.manipulationMatrix);\r\n    }\r\n    scale(s) {\r\n        const radians = (this.tr.rotate * Math.PI) / 180;\r\n        const c = Math.sin(radians) * s;\r\n        const a = Math.cos(radians) * s;\r\n\r\n        this.manipulationMatrix.a = a;\r\n        this.manipulationMatrix.b = -c;\r\n        this.manipulationMatrix.c = c;\r\n        this.manipulationMatrix.d = a;\r\n\r\n        this.setMatrix(this.manipulationMatrix);\r\n    }\r\n    scaleAndRotate(s, angle) {\r\n        const radians = (-angle * Math.PI) / 180;\r\n        const c = Math.sin(radians) * s;\r\n        const a = Math.cos(radians) * s;\r\n\r\n        this.manipulationMatrix.a = a;\r\n        this.manipulationMatrix.b = -c;\r\n        this.manipulationMatrix.c = c;\r\n        this.manipulationMatrix.d = a;\r\n\r\n        this.setMatrix(this.manipulationMatrix);\r\n    }\r\n    scaleAndTranslate(s, x, y) {\r\n        const radians = (this.tr.rotate * Math.PI) / 180;\r\n        const c = Math.sin(radians) * s;\r\n        const a = Math.cos(radians) * s;\r\n\r\n        this.manipulationMatrix.a = a;\r\n        this.manipulationMatrix.b = -c;\r\n        this.manipulationMatrix.c = c;\r\n        this.manipulationMatrix.d = a;\r\n        this.manipulationMatrix.e = x;\r\n        this.manipulationMatrix.f = y;\r\n\r\n        this.setMatrix(this.manipulationMatrix);\r\n    }\r\n    rotateAndTranslate(angle, x, y) {\r\n        const radians = (-angle * Math.PI) / 180;\r\n        const c = Math.sin(radians) * this.tr.scale;\r\n        const a = Math.cos(radians) * this.tr.scale;\r\n\r\n        this.manipulationMatrix.a = a;\r\n        this.manipulationMatrix.b = -c;\r\n        this.manipulationMatrix.c = c;\r\n        this.manipulationMatrix.d = a;\r\n        this.manipulationMatrix.e = x;\r\n        this.manipulationMatrix.f = y;\r\n\r\n        this.setMatrix(this.manipulationMatrix);\r\n    }\r\n    scaleAndRotateAndTranslate(s, angle, x, y) {\r\n        const r = (-angle * Math.PI) / 180;\r\n        const c = Math.sin(r) * s;\r\n        const a = Math.cos(r) * s;\r\n\r\n        this.manipulationMatrix.a = a;\r\n        this.manipulationMatrix.b = -c;\r\n        this.manipulationMatrix.c = c;\r\n        this.manipulationMatrix.d = a;\r\n        this.manipulationMatrix.e = x;\r\n        this.manipulationMatrix.f = y;\r\n\r\n        this.setMatrix(this.manipulationMatrix);\r\n    }\r\n}\r\n\r\n\r\nexport default Obj;\r\n","class Slide {}\r\n\r\nexport default Slide;\r\n","import step from './engine/dispatch';\r\nimport Obj from './classes/main';\r\nimport Slide from './classes/slide';\r\nimport { addSlides, next } from './control/player';\r\n\r\n// rollup shit\r\n(() => [step, Obj, Slide, addSlides, next])();\r\n"],"names":["pauseToReload","playToPause","reloadToPlay","pauseToPlay"],"mappings":"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","preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}